<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Dubbo – 6 - 网络传输层</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/6/</link><description>Recent content in 6 - 网络传输层 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/6/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs3-V2: 6-2 - 客户端超时</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/6/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/6/2/</guid><description>
&lt;p>超时是调用端发生在请求发出后，无法在指定的时间内获得对应的响应。&lt;/p>
&lt;h2 id="可能的原因">可能的原因&lt;/h2>
&lt;ol>
&lt;li>服务端确实处理比较慢，无法在指定的时间返回结果，调用端就自动返回一个超时的异常响应来结束此次调用。&lt;/li>
&lt;li>服务端如果响应的比较快，但当客户端 Load 很高，负载压力很大的时候，会因为客户端请求发不出去、响应卡在 TCP Buffer 等问题，造成超时。因为客户端接收到服务端发来的数据或者请求服务端的数据，都会在系统层面排队，如果系统负载比较高，在内核态的时间占比就会加长，从而造成客户端获取到值时已经超时。&lt;/li>
&lt;li>通常是业务处理太慢，可在服务提供方机器上执行：&lt;code>jstack [PID] &amp;gt; jstack.log&lt;/code> 分析线程都卡在哪个方法调用上，这里就是慢的原因。如果不能调优性能，请调高 timeout 阈值。&lt;/li>
&lt;/ol>
&lt;h2 id="排查和解决步骤">排查和解决步骤&lt;/h2>
&lt;ol>
&lt;li>两边可能有 GC，检查服务端和客户端 GC 日志，耗时很长的 GC，会导致超时。超时的发生很可能意味着调用端或者服务端的资源（CPU，内存或者网络）出现了瓶颈，需要检查服务端的问题还是调用端的问题来排除 GC 抖动等嫌疑。&lt;/li>
&lt;li>检查服务端的网络质量，比如重传率来排除网络嫌疑。&lt;/li>
&lt;li>借助链路跟踪的分析服务（比如阿里的 &lt;a href="https://help.aliyun.com/document_detail/63796.html">ARMS&lt;/a> ，开源的 &lt;a href="https://github.com/opentracing/opentracing-java">OpenTracing&lt;/a>
系的实现 &lt;a href="https://github.com/openzipkin/zipkin">Zipkin&lt;/a> 、&lt;a href="https://github.com/apache/skywalking">SkyWalking&lt;/a> 等）来分析下各个点的耗时情况。&lt;/li>
&lt;/ol>
&lt;h2 id="致谢">致谢&lt;/h2>
&lt;p>这个错误码的 FAQ 页面参考了空冥同学的 &lt;a href="https://github.com/StabilityMan/StabilityGuide/blob/master/docs/diagnosis/plugin/rpc/%E7%B3%BB%E7%BB%9F%E7%A8%B3%E5%AE%9A%E6%80%A7%E2%80%94%E2%80%94Dubbo%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.md">《Dubbo 常见错误及解决方法》&lt;/a> 。&lt;/p>
&lt;p>所引文章通过 &lt;a href="http://creativecommons.org/licenses/by/4.0/">CC-BY-4.0&lt;/a> 协议赋予了汇编的权利。在此向原作者表示感谢。&lt;/p>
&lt;p style="margin-top: 3rem;"> &lt;/p></description></item></channel></rss>