<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Dubbo – 0 - Common 层</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/</link><description>Recent content in 0 - Common 层 on Apache Dubbo</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs3-V2: 0-1 - 线程池资源枯竭</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/1/</guid><description>
&lt;p>服务端的线程资源耗尽了。
默认情况下，Dubbo 服务端的业务线程数是 200 个。如果多个并发请求量超过了 200，就会拒绝新的请求，抛出此错误。&lt;/p>
&lt;h3 id="可能的原因">可能的原因&lt;/h3>
&lt;ol>
&lt;li>Consumer 的并发请求量太大，导致 Provider 端创建的线程数量超限。&lt;/li>
&lt;li>可能 Provider 端在执行业务的时候，由于业务调用外部应用接口，导致线程出现阻塞，从而导致线程池回收不了线程。&lt;/li>
&lt;/ol>
&lt;h3 id="排查和解决步骤">排查和解决步骤&lt;/h3>
&lt;ul>
&lt;li>开启 Dubbo 的访问日志功能，排查是否有短时间内大量调用 RPC 服务的情况。&lt;/li>
&lt;li>通过 &lt;code>jps&lt;/code> 和 &lt;code>jstack&lt;/code> 指令检查线程池中各个线程的状态，看下是否有业务调用外部应用接口造成阻塞。&lt;/li>
&lt;li>如果是 Consumer 的并发请求量太大，那么调整 Provider 端的 &lt;code>dubbo.provider.threads&lt;/code> 参数，将 Dubbo 的线程池的数目调大。&lt;/li>
&lt;li>如果 Provider 业务的 QPS 实在太大，目前的服务器数目处理不完，那么增加 Provider 端服务器的数量，让更多的服务器分担压力。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>这个错误码的 FAQ 页面参考了空冥同学的 &lt;a href="https://github.com/StabilityMan/StabilityGuide/blob/master/docs/diagnosis/plugin/rpc/%E7%B3%BB%E7%BB%9F%E7%A8%B3%E5%AE%9A%E6%80%A7%E2%80%94%E2%80%94Dubbo%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.md">《Dubbo 常见错误及解决方法》&lt;/a> 。
所引文章通过 &lt;a href="http://creativecommons.org/licenses/by/4.0/">CC-BY-4.0&lt;/a> 协议赋予了汇编的权利。在此向原作者表示感谢。&lt;/p>
&lt;/blockquote></description></item><item><title>Docs3-V2: 0-2 - 非法属性值</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/2/</guid><description>
&lt;h2 id="可能的原因">可能的原因&lt;/h2>
&lt;p>这个提示是指用户配置的值与属性本身所需的数据类型并不匹配。比如 &lt;code>dubbo.comsumer.threads&lt;/code> 属性只能接受数值属性，但是用户所输入的值混入了字母。&lt;/p>
&lt;h2 id="排查和解决步骤">排查和解决步骤&lt;/h2>
&lt;p>根据&lt;a href="../../../reference-manual/config/properties">配置项参考手册&lt;/a>，查找出错的配置项，检查该项指定的类型，检查是否出现类型不一致的情况。&lt;/p>
&lt;p style="margin-top: 3rem;"> &lt;/p></description></item><item><title>Docs3-V2: 0-3 - 无法访问缓存路径</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/3/</guid><description>
&lt;p>其它模块复用了 Common 层的基于文件的缓存机制（目前是元数据模块），而 Common 层的文件缓存机制无法访问它指定的目录。
显示的例子如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#93a1a1;background-color:#002b36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>2022-08-29 00:35:00,189 ERROR [org.apache.dubbo.common.cache.FileCacheStoreFactory:?] - [DUBBO] Cache store path can&amp;#39;t be created: , dubbo version: , current host: 10.0.1.1, error code: 0-3. This may be caused by inaccessible of cache path, go to https://dubbo.apache.org/faq/0/3 to find instructions.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>java.nio.file.FileAlreadyExistsException: [Path]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:87)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/sun.nio.fs.WindowsFileSystemProvider.createDirectory(WindowsFileSystemProvider.java:521)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/java.nio.file.Files.createDirectory(Files.java:700)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/java.nio.file.Files.createAndCheckIsDirectory(Files.java:807)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at java.base/java.nio.file.Files.createDirectories(Files.java:753)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> at org.apache.dubbo.common.cache.FileCacheStoreFactory.getInstance(FileCacheStoreFactory.java:90)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="可能的原因">可能的原因&lt;/h2>
&lt;ol>
&lt;li>多个 Dubbo 进程（或其他 Java 进程）使用了同一个缓存文件。&lt;/li>
&lt;li>由于缓存文件所在目录的文件系统权限问题，导致读写失败。&lt;/li>
&lt;/ol>
&lt;h2 id="排查和解决步骤">排查和解决步骤&lt;/h2>
&lt;ol>
&lt;li>根据下面显示的实际异常找到访问不了的目录，确定下它的文件访问权限。&lt;/li>
&lt;li>确定下是否有别的 Dubbo 实例正在访问这个路径。&lt;/li>
&lt;li>尝试配置 &lt;strong>Java System Property（用 -D 配置的 Java 系统属性）&lt;/strong> &lt;code>dubbo.meta.cache.filePath&lt;/code> 和 &lt;code>dubbo.mapping.cache.filePath&lt;/code>，将它指定成一个当前用户能够完全控制的目录下。&lt;/li>
&lt;/ol>
&lt;p style="margin-top: 3rem;"> &lt;/p></description></item><item><title>Docs3-V2: 0-4 - 缓存条目超限</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/4/</guid><description>
&lt;p>其它模块复用了 Common 层的基于文件的缓存机制（目前是元数据模块），而 Common 层的文件缓存机制 “发觉” 条目超限。
显示的例子如下：&lt;/p>
&lt;h2 id="可能的原因">可能的原因&lt;/h2>
&lt;ol>
&lt;li>用户不合理地配置了 Java System Property （用 -D 配置的 Java 系统属性） &lt;code>dubbo.mapping.cache.entrySize&lt;/code> 或者 &lt;code>dubbo.meta.cache.entrySize&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;p>&lt;code>dubbo.mapping.cache.entrySize&lt;/code> 或者 &lt;code>dubbo.meta.cache.entrySize&lt;/code> 的默认值如下：&lt;/p>
&lt;style>
.sheet-border, .sheet-border tr, .sheet-border tr td {
border: 1px black solid;
text-align: center;
}
.sheet-border tr td {
padding: 0.5rem 2rem;
}
.sheet-header td {
font-weight: bold;
background: #cccccc;
}
&lt;/style>
&lt;table class="sheet-border">
&lt;tr class="sheet-header">
&lt;td>dubbo.mapping.cache.entrySize&lt;/td>
&lt;td>dubbo.meta.cache.entrySize&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10000&lt;/td>
&lt;td>100&lt;/td>
&lt;/tr>
&lt;/table>
&lt;/div>
&lt;h2 id="排查和解决步骤">排查和解决步骤&lt;/h2>
&lt;ol>
&lt;li>尝试重新配置上述 &lt;strong>Java System Property（用 -D 配置的 Java 系统属性）&lt;/strong>。&lt;/li>
&lt;li>如果确实没有配置这些 System Property，请到 &lt;a href="https://github.com/apache/dubbo/issues">GitHub Issue Tracker&lt;/a> 下发 Issue。&lt;/li>
&lt;/ol>
&lt;p style="margin-top: 3rem;"> &lt;/p></description></item><item><title>Docs3-V2: 0-5 - 缓存文件大小超限</title><link>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dubbo.apache.org/zh/docs3-v2/java-sdk/faq/0/5/</guid><description>
&lt;p>其它模块复用了 Common 层的基于文件的缓存机制（目前是元数据模块），而 Common 层的文件缓存机制 “发觉” 文件大小超限。
显示的例子如下：&lt;/p>
&lt;h2 id="可能的原因">可能的原因&lt;/h2>
&lt;ol>
&lt;li>用户不合理地配置了 Java System Property （用 -D 配置的 Java 系统属性） &lt;code>dubbo.mapping.cache.maxFileSize&lt;/code> 或者 &lt;code>dubbo.meta.cache.maxFileSize&lt;/code>&lt;/li>
&lt;li>缓存文件因文件系统或磁盘错误而被破坏。&lt;/li>
&lt;/ol>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>&lt;strong>提示：&lt;/strong>&lt;/p>
&lt;p>&lt;code>dubbo.mapping.cache.maxFileSize&lt;/code> 和 &lt;code>dubbo.meta.cache.maxFileSize&lt;/code> 没有显示默认值，&lt;/p>
&lt;p>而根据 &lt;code>org.apache.dubbo.common.cache.FileCacheStore.LimitedLengthBufferedWriter&lt;/code> 的逻辑而查到的最大文件大小的默认值为：&lt;code>Long.MAX_VALUE&lt;/code> ( 2&lt;sup>63&lt;/sup>-1 ) 。&lt;/p>
&lt;/div>
&lt;h2 id="排查和解决步骤">排查和解决步骤&lt;/h2>
&lt;ol>
&lt;li>尝试重新配置上述 &lt;strong>Java System Property（用 -D 配置的 Java 系统属性）&lt;/strong>。&lt;/li>
&lt;li>删除缓存文件夹重启 Provider 和 Consumer （缓存文件夹的位置一般在 &lt;code>~/.dubbo&lt;/code>。如果配置了 &lt;code>dubbo.meta.cache.filePath&lt;/code> 和 &lt;code>dubbo.mapping.cache.filePath&lt;/code> 则为该路径）。&lt;/li>
&lt;li>如果确实没有配置这些 System Property，请到 &lt;a href="https://github.com/apache/dubbo/issues">GitHub Issue Tracker&lt;/a> 下发 Issue。&lt;/li>
&lt;/ol>
&lt;p style="margin-top: 3rem;"> &lt;/p></description></item></channel></rss>